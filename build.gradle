plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.41"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.41"
    id 'io.quarkus'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/floodplainio/floodplain-library")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_PACKAGES_PAN")
        }
    }
}

dependencies {
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-agroal'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation "io.floodplain:config-runtime:${floodplain_version}"
    implementation "io.floodplain:floodplain-reactive-topology:${floodplain_version}"
    implementation "io.floodplain:floodplain-document-stream:${floodplain_version}"
    implementation "io.floodplain:floodplain-document:${floodplain_version}"
    implementation "io.floodplain:floodplain-authentication-api:${floodplain_version}"
    implementation "io.floodplain:floodplain-core:${floodplain_version}"
    implementation "io.floodplain:floodplain-reactive:${floodplain_version}"
    implementation "io.floodplain:floodplain-function:${floodplain_version}"
    implementation "io.floodplain:floodplain-reactive:${floodplain_version}"
    implementation "io.floodplain:floodplain-version:${floodplain_version}"
    implementation "io.floodplain:immutable-api:${floodplain_version}"
    implementation "io.floodplain:immutable-impl:${floodplain_version}"
    implementation "io.floodplain:replication-api:${floodplain_version}"
    implementation "io.floodplain:replication-impl:${floodplain_version}"
    implementation "io.floodplain:replication-json:${floodplain_version}"
    implementation "io.floodplain:replication-protobuf:${floodplain_version}"
    implementation "io.floodplain:streams-api:${floodplain_version}"
    implementation "io.floodplain:streams:${floodplain_version}"
    implementation "io.floodplain:kafka-rx2:${floodplain_version}"
    implementation "io.floodplain:pubsub-rx2:${floodplain_version}"
    implementation "io.floodplain:kafka-converter:${floodplain_version}"
    implementation "io.floodplain:floodplain-api:${floodplain_version}"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'io.floodplain'
version '1.0.0-SNAPSHOT'

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

publishing {
    publications {
        "$project.name"(MavenPublication) {
            groupId = "io.floodplain"
            artifactId = project.name
            version = rootProject.ext.floodplain_version
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/floodplainio/floodplain-library")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_PACKAGES_PAN")
            }
        }
    }
}
